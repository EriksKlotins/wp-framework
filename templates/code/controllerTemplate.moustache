<?php

/*
	This is an autogenerated constructor for displaying {{name}}
*/

class {{Internal-name}}Controller extends BaseController
{
	
	public function index($params = null)
	{
		$view = new {{Internal-name}}ViewModel(Model::{{Internal-name}}()->getItem($params[1]));
		if ($view->isModelLoaded())
		{
			{{#has-comments}}
			/*
				Here goes code that extends or alters $view 
				$params will contain all routing parameters
				$params[0] typically contains whole QUERY_STR
				$params[1] contains the id
				You can change this by adjusting regex parameters in routes.php file
			*/
			{{/has-comments}}
			$view->greeting = "Hello!";
			{{#has-comments}}
			/*
				Render method is inherited from BaseController and will take care of 
				rendering HAML code. It returns and outputs the rendered document.

				First parameter is template name, you can find it in /templates/ folder of your theme
				Second parameter is array of variables to be passed to the template
				Third, optional, parameter is an array and may contain additional options
				*	template_dir - specify different source for templates
				* 	echo - (true|false) if true then rendered document will be passed directly to output.  

				There is also renderMustache() method for rendering Moustache templates
				http://mustache.github.io/#demo

			*/
			{{/has-comments}}	
			$this->render('{{internal-name}}', $view);
		}
		else
		{
			/*
				Here goes code that handles invalid urls
			*/
			wp_die('Item not found!');
		}
		{{#has-comments}}
		/*
			You may want to see the data that are passed to the template
		*/
		//var_dump($view);
		{{/has-comments}}
	}
}